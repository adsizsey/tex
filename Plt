import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# ------------------------------------------------------------------
# Turn results → tidy DataFrame  (rows = strategy, cols = metrics)
# ------------------------------------------------------------------
df = pd.DataFrame(results).T
df.index.name = "strategy"

# 1️⃣  TOKEN vs WORD vs SAMPLE(=100%)  ── one subplot per metric
core_metrics = {
    "Accuracy" : ("token_acc",  "word_acc",  "sample=100%"),
    "Precision": ("token_prec","word_prec","sample=100%"),   # sample prec = same as acc, kept for layout
    "Recall"   : ("token_rec", "word_rec",  "sample=100%"),
    "F1"       : ("token_f1",  "word_f1",   "sample=100%")
}

for title, cols in core_metrics.items():
    plt.figure(figsize=(8,4))
    bar_w = 0.25
    x = np.arange(len(df))
    for j,col in enumerate(cols):
        plt.bar(x + j*bar_w, df[col], width=bar_w, label=col)
    plt.xticks(x + bar_w, df.index, rotation=20)
    plt.ylim(0,1); plt.ylabel(title)
    plt.title(f"{title} – Token vs Word vs Sample (100 %)")
    plt.grid(axis='y', ls='--', alpha=.4)
    plt.legend(); plt.tight_layout(); plt.show()

# 2️⃣  SAMPLE-LEVEL PASS-RATES  (50 / 70 / 90 / 100 %)
sample_cols = ["sample≥50%", "sample≥70%", "sample≥90%", "sample=100%"]
plt.figure(figsize=(9,4))
bar_w = 0.18
x = np.arange(len(df))
for j,col in enumerate(sample_cols):
    plt.bar(x + j*bar_w, df[col], width=bar_w, label=col)
plt.xticks(x + 1.5*bar_w, df.index, rotation=20)
plt.ylim(0,1); plt.ylabel("Pass-rate")
plt.title("Sample-level Accuracy Thresholds")
plt.grid(axis='y', ls='--', alpha=.4)
plt.legend(); plt.tight_layout(); plt.show()
